# Зависимости
require 'matrix'

# Глобальные переменные для хранения параметров
$temp = 0.0       # Начальная температура кофе
$env_t = 0.0      # Температура окружающей среды
$cool_c = 0.0     # Коэффициент охлаждения
$time_limit = 0   # Время охлаждения в секундах
$aprox_vector = [] # Вектор для хранения коэффициентов аппроксимации

# Функция вычисления коэффициента корреляции
def korrel(temperatures, mean_y)
  sum_xy = 0.0
  sum_x2 = 0.0
  sum_y2 = 0.0
  mean_x = ($time_limit - 1) / 2.0 # Среднее значение времени
  
  # Вычисляем суммы для формулы корреляции
  temperatures.each_with_index do |temp, i|
    sum_xy += (i - mean_x) * (temp - mean_y)
    sum_x2 += (i - mean_x) ** 2
    sum_y2 += (temp - mean_y) ** 2
  end
  
  # Возвращаем коэффициент корреляции Пирсона
  sum_xy / Math.sqrt(sum_x2 * sum_y2)
end

# Функция линейной аппроксимации методом наименьших квадратов
def aprox(x_vector, y_vector)
  sum_x = 0.0
  sum_y = 0.0
  sum_xy = 0.0
  sum_x2 = 0.0
  n = x_vector.size # Количество точек
  
  # Вычисляем необходимые суммы
  x_vector.each_with_index do |x, i|
    y = y_vector[i]
    sum_x += x
    sum_y += y
    sum_xy += x * y
    sum_x2 += x * x
  end
  
  # Вычисляем коэффициенты a и b для уравнения y = a*x + b
  a = (n * sum_xy - sum_x * sum_y) / (n * sum_x2 - sum_x * sum_x)
  b = (sum_y - a * sum_x) / n
  
  [a, b]
end

# Основная функция моделирования охлаждения кофе
def coffee(temp, env_t, cool_c, time_limit)
  temperatures = [] # Вектор температур
  times = []        # Вектор времени
  temp_corr = []    # Пары (температура, корреляция)
  
  # Моделируем охлаждение по закону Ньютона
  (0..time_limit).each do |t|
    temperature = env_t + (temp - env_t) * Math.exp(-cool_c * t)
    temperatures << temperature
    times << t
  end
  
  # Вычисляем коэффициенты аппроксимирующей прямой
  a, b = aprox(times, temperatures)
  
  # Сохраняем коэффициенты в глобальный вектор
  $aprox_vector = [a, b]
  
  # Вычисляем среднюю температуру и коэффициент корреляции
  mean_y = temperatures.sum / temperatures.size
  corr = korrel(temperatures, mean_y)
  
  # Формируем результат - пары (температура, корреляция)
  temperatures.each do |temp|
    temp_corr << [temp, corr]
  end
  
  temp_corr
end

# Основная программа
puts "Введите начальную температуру кофе (°C): "
$temp = gets.chomp.to_f

puts "Введите температуру окружающей среды (°C): "
$env_t = gets.chomp.to_f

puts "Введите коэффициент охлаждения (dC): "
$cool_c = gets.chomp.to_f

puts "Введите время охлаждения (секунды): "
$time_limit = gets.chomp.to_i

# Вычисление результатов охлаждения
results = coffee($temp, $env_t, $cool_c, $time_limit)

# Вывод результатов анализа
puts "\nАНАЛИЗ ОХЛАЖДЕНИЯ КОФЕ"
puts "-----------------------"
puts "• Начальная температура: #{$temp} °C"
puts "• Температура среды: #{$env_t} °C"
puts "• Коэффициент охлаждения: #{$cool_c} dC"
puts "• Время моделирования: #{$time_limit} сек\n\n"

# Аппроксимация
puts "ЛИНЕЙНАЯ АППРОКСИМАЦИЯ"
puts "Уравнение прямой: T(t) = #{$aprox_vector[0]} * t + #{$aprox_vector[1]}"
puts "• Коэффициент a (скорость изменения): #{$aprox_vector[0]} °C/сек"
puts "• Коэффициент b (начальное смещение): #{$aprox_vector[1]} °C\n\n"

# Корреляционный анализ
puts "КОРРЕЛЯЦИОННЫЙ АНАЛИЗ"
puts "• Коэффициент корреляции Пирсона: #{results[0][1]}"
puts "  (Значение близкое к -1 показывает сильную обратную зависимость)\n\n"

# Таблица результатов
puts "ТАБЛИЦА ТЕМПЕРАТУР"
puts "|-------|-------------|------------------|"
puts "| Время | Температура | Корреляция (r)   |"
puts "|-------|-------------|------------------|"

results.each_with_index do |result, t|
  puts "| %5d | %11.2f | %16.4f |" % [t, result[0], result[1]]
end

puts "|-------|-------------|------------------|"

# Итоговый вывод
puts "\nВЫВОД:"
puts "1. Процесс охлаждения соответствует экспоненциальному закону Ньютона"
puts "2. Сильная отрицательная корреляция (#{results[0][1]}) подтверждает устойчивое снижение температуры"
puts "3. Линейная аппроксимация дает приближенную оценку динамики охлаждения"
puts "4. Для более точного анализа рекомендуется использовать нелинейную аппроксимацию"
